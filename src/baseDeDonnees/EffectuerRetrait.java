/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package baseDeDonnees;

import finabank.BDD;
import finabank.ParametresConnection;
import java.sql.*;
import java.text.DateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yepy
 */
public class EffectuerRetrait extends javax.swing.JFrame {
    ResultSet rs, rs1;
    BDD db;
    String numCompte, solde;
    int somme, id = 0, idOp = 0;
    
    public EffectuerRetrait() {
        db = new BDD(new ParametresConnection().hostDb, new ParametresConnection().username, new ParametresConnection().password, 
                new ParametresConnection().ipHost);
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtNumCompte = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSomme = new javax.swing.JTextField();
        btnRetirer = new javax.swing.JButton();
        btnSeeReleve = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabReleve = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnClose.setText("QUITTER");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnPrev.setText("RETOUR");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("EFFECTUER UN RETRAIT");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel2.setText("Entrer le numéro du compte :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setText("Entrer la somme à rétirer :");

        txtSomme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSommeActionPerformed(evt);
            }
        });

        btnRetirer.setText("RETIRER");
        btnRetirer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirerActionPerformed(evt);
            }
        });

        btnSeeReleve.setText("VOIR RELEVE COMPTE");
        btnSeeReleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeeReleveActionPerformed(evt);
            }
        });

        tabReleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NUM COMPTE", "NOM CLIENT", "PRENOM CLIENT", "OPERATION", "MONTANT", "DATE OPERATION", "NUM BENEFICIAIRE"
            }
        ));
        jScrollPane1.setViewportView(tabReleve);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("OPERATIONS PRECEDENTES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(567, Short.MAX_VALUE)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSeeReleve, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSomme)
                            .addComponent(txtNumCompte, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(btnRetirer, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClose)
                            .addComponent(btnPrev))
                        .addGap(38, 38, 38)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumCompte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSomme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnRetirer)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSeeReleve)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        Accueil_Caissiere caissiere = new Accueil_Caissiere();
        this.dispose();
        caissiere.setVisible(true);
    }//GEN-LAST:event_btnPrevActionPerformed

    private void txtSommeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSommeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSommeActionPerformed
    
    
    private void btnSeeReleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeeReleveActionPerformed
        // TODO add your handling code here:
        numCompte = txtNumCompte.getText();
        
        if (!numCompte.equals("")) {
            //Remplir la table pour le rélevé de compte
            tabReleve.removeAll();
            DefaultTableModel dtm = new DefaultTableModel();
            Object[] table = {"operations", "comptes", "clients"};
            rs = db.querySelectJoinTable(table, "operations.num_compte_client='" + numCompte + "' And comptes.num_compte='" + numCompte + "' And comptes.id_client=clients.numclt");         
            
            try {
                while(rs.next()) {
                    String numCpte = rs.getString("num_compte_client");
                    String nom = rs.getString("nom");
                    String prenom = rs.getString("prenom");
                    int typeOp = rs.getInt("id_type_op");
                    rs1 = db.querySelectAllWithParam("type_operations", "id='" + typeOp + "'");
                    String opea = rs1.getString("intitule");
                    String montant = rs.getDouble("montant")+"";
                    String date = rs.getString("date_op");
                    String numBenef = rs.getString("num_compte_benef");
                    
                    String row[] = {numCpte, nom, prenom, opea, montant, date, numBenef};
                    dtm.addRow(row);
                }
                tabReleve.setModel(dtm);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Une erreur est survenue. Veuillez réessayer");
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez entrer le numéro de votre compte !");
        }
    }//GEN-LAST:event_btnSeeReleveActionPerformed

    private void btnRetirerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirerActionPerformed
        // TODO add your handling code here:
        numCompte = txtNumCompte.getText();
        String sommeT = txtSomme.getText();
        
        if  (!numCompte.equals("") && !sommeT.equals("")) {
            try {
                somme = Integer.parseInt(sommeT);
                //Sélection du compte sur lequel faire l'opération
                rs = db.querySelectAllWithParam("comptes", "num_compte='" + numCompte + "'");
                while (rs.next())
                   solde = rs.getString("solde");
                //Sélection du type d'opération en cours
                rs = db.querySelectAllWithParam("type_operations", "intitule='Retrait'");
                while (rs.next())
                    idOp = rs.getInt("id");
                
                rs = db.querySelectAll("operations");
                while (rs.next())
                    id = rs.getInt("id");
                    
                if (Integer.parseInt(solde) >= somme) {
                    //Récupération de la date
                    Locale loc = new Locale("fr", "FR");
                    DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.DEFAULT, loc);
                    String date = dateFormat.format(new java.util.Date());
                    
                    //Ajout d'une nouvelle opération
                    Object[] retrait = {id+1, idOp, numCompte, numCompte, somme, date};
                    System.out.println(db.queryInsert("operations", retrait));
                    
                    //Mise à jour du solde de compte;
                    int newSolde = Integer.parseInt(solde) - somme;
                    System.out.println(db.queryUpdateOne("comptes", "solde", String.valueOf(newSolde), "num_compte='" + numCompte + "'"));
                    
                    JOptionPane.showMessageDialog(this, "Retrait Effectué !");
                } else {
                    JOptionPane.showMessageDialog(this, "Solde insuffisant");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Une erreur est survenue. Veuillez réessayer");
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !");
        }
    }//GEN-LAST:event_btnRetirerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EffectuerRetrait.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EffectuerRetrait.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EffectuerRetrait.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EffectuerRetrait.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EffectuerRetrait().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnRetirer;
    private javax.swing.JButton btnSeeReleve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tabReleve;
    private javax.swing.JTextField txtNumCompte;
    private javax.swing.JTextField txtSomme;
    // End of variables declaration//GEN-END:variables
}
